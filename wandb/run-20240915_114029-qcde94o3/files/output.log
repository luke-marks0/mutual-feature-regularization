
Running EEG Experiment...
/root/alignment-regularization/experiments/eeg_task.py:62: RuntimeWarning: invalid value encountered in divide
  return (segment - np.mean(segment)) / np.std(segment)
/root/alignment-regularization/experiments/eeg_task.py:62: RuntimeWarning: divide by zero encountered in divide
  return (segment - np.mean(segment)) / np.std(segment)
Traceback (most recent call last):
  File "/root/alignment-regularization/main.py", line 47, in run_experiment
    eeg_task.run(device, config)
  File "/root/alignment-regularization/experiments/eeg_task.py", line 108, in run
    trainer.train(dataloader, config['hyperparameters']['num_epochs'])
  File "/root/alignment-regularization/utils/sae_trainer.py", line 58, in train
    outputs, activations = self.base_model.forward_with_encoded(X_batch)
  File "/root/alignment-regularization/models/sae.py", line 27, in forward_with_encoded
    results = [self._process_layer(encoder, x, i) for i, encoder in enumerate(self.encoders)]
  File "/root/alignment-regularization/models/sae.py", line 27, in <listcomp>
    results = [self._process_layer(encoder, x, i) for i, encoder in enumerate(self.encoders)]
  File "/root/alignment-regularization/models/sae.py", line 31, in _process_layer
    encoded: torch.Tensor = self._topk_activation(encoder(x), encoder_idx)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/linear.py", line 116, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (500x250 and 256x512)
An error occurred: mat1 and mat2 shapes cannot be multiplied (500x250 and 256x512)